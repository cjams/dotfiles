#!/bin/bash
set -e

#
# NOTE: this should only be called by install
#


reset="\e[0m"
bold="\e[1m"
bold_green="\e[1;92m"
bold_cyan="\e[1;96m"
bold_blue="\e[1;94m"
bold_white="\e[1;99m"

echo_milestone()
{
    echo -e "$bold_green==>$reset $bold_white$1$reset"
}

echo_task()
{
    echo -e "  $bold_blue->$reset $bold_white$1$reset"
}

#
# Args passed from install
#
region=$1
city=$2
host=$3
user=$4
boot=$5
boot_dev=$6

#
# From this point on, we are arch-chrooted into the new system
#
echo_milestone "Cleaning up artifacts from the live environment"
echo_task "Configuring /etc/systemd/journald.conf"
sed -i 's/Storage=volatile/#Storage=auto/' /etc/systemd/journald.conf

echo_task "Disabling archiso systemd services"
systemctl disable pacman-init.service choose-mirror.service > /dev/null
rm -rf /etc/systemd/system/{choose-mirror.service,pacman-init.service}
rm -rf /etc/systemd/system/{etc-pacman.d-gnupg.mount,getty@tty1.service.d}
rm -f /etc/systemd/scripts/choose-mirror

echo_task "Removing archiso scripts"
rm -f /etc/systemd/system/getty@tty1.serivice.d/autologin.conf
rm -f /root/{.automated_script.sh,.zlogin}
rm -f /etc/mkinitcpio-archiso.conf
rm -rf /etc/initcpio

echo_milestone "Importing archlinux master keys"
pacman-key --init
pacman-key --populate archlinux

echo_milestone "Configuring locale"
sed -i 's/#en_US\.UTF-8/en_US.UTF-8/' /etc/locale.gen
echo LANG=en_US.UTF-8 > /etc/locale.conf
locale-gen > /dev/null

echo_milestone "Configuring time"
echo_task "Setting /etc/localtime: $region/$city"
ln -sf /usr/share/zoneinfo/$region/$city /etc/localtime

echo_task "Setting the hardware clock"
hwclock --systohc

echo_milestone "Initializing network"
echo_task "Setting hostname"
echo $host > /etc/hostname

echo_task "Starting dhcpc daemon"
systemctl start dhcpcd
systemctl enable dhcpcd

echo_task "Starting ssh daemon"
systemctl start sshd
systemctl enable sshd

echo_milestone "Generating initramfs"
mkinitcpio -p linux

case $boot in
uefi)
    echo_milestone "Install GRUB for UEFI"
    grub-install --target=x86_64-efi \
                 --efi-directory=/boot \
                 --bootloader-id=grub
    ;;
bios)
    echo_milestone "Targeting GRUB for BIOS"
    grub-install --target=i386-pc $boot_dev
    ;;
*)
    echo "ERROR: unknown boot value: $boot"
    exit
esac

echo_task "Configuring GRUB"
grub-mkconfig -o /boot/grub/grub.cfg

echo_milestone "Configuring user accounts"
echo_task "Adding new user: $user"
useradd -G wheel -U -m $user

echo_task "Running post-install hook"
/root/post-install $user
